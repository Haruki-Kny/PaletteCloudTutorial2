17 + 42 #addition
"foo"
"foo" + "bar"
first = "Michael"
"#{first} Hartl"
first = "haruki"
family = "konii"
first + " " + family
puts "foo"
print "foo"
city = "Asaka"
pref = "Saitama"
puts("#{pref} #{city}")
puts("#{pref}#{city}")
puts("#{pref}\t#{city}")
puts('#{pref}\t#{city}')
"foobar".length
nil.to_s
"".nil?
!!nil
a = "racecar"
a.length
a.reverse
a == a.reverse
a = "A man, a plan, a canal, Panama".split(", ")
s = a.join
("a".."z").to_a[7]
("a".."z").to_a[-7]
(1..5).each {|i| puts 2*i\
}
(1..5).each do |i|\
  puts 2 * i\
end
(0..16).each do |i|\
  puts i ** 2\
end
def yeller( a = [])\
  a.join.upcase\
end
yeller(['o', 'l', 'd'])
def random_subdomain\
  ('a'..'z').to_a.shuffle[0..7].join\
end
random_subdomain
h2 = { name: "Michael Hartl", email: "michael@example.com" }
a = {'one'=>'uno', 'two'=>'dos', 'three'=>'tres'}
a.each do |key, value|\
  "'#{key}'はスペイン語で'#{value}'"\
end
a.each do |key, value|\
  puts "'#{key}'はスペイン語で'#{value}'"\
end
person1 = { first: "haruki", last: "konii"}
person2 = { first: "joe", last: "konii"}
person3 = { first: "atsuko", last: "konii"}
params = {}
params[:father]= person1
params[:mother]= person2
params[:child]= person3
params[:father][:first] == person1[:first]
  { "a" => 100, "b" => 200 }.merge({ "b" => 300 })
Range
Range.new(1, 10)
(1..10) == Range.new(1, 10)
class Word < String\
  def palindrome?\
    self == self.reverse\
  end\
end
s = Word.new("level")
s.palindrome?
s.length
s.class
s.class.superclass
s.class.superclass.superclass
s.class.superclass.superclass.superclass
s.class.superclass.superclass.superclass.superclass
"level".palindrome?
class String\
  def palindrome?\
    self == self.reverse\
  end\
end
"level".palindrome?
require './example_user'
example = User.new
example = User.new
example.name
example.name = "Example User"
example.email = "user@fewa.com"
example.formatted_email
example = User.new
example.first_name = "haruk"
require './example_user'
require './example_user'
